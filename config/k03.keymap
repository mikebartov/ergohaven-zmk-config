#include "keys_ru.h"

#define ZMK_POINTING_DEFAULT_SCRL_VAL 20

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "tap-preferred";
    quick-tap-ms = <50>;
};

/ {
    behaviors {
        enc_vol: enc_vol {
            compatible = "zmk,behavior-sensor-rotate";
            label = "ENC_VOL";
            #sensor-binding-cells = <0>;
            bindings = <&kp C_VOL_UP>, <&kp C_VOL_DN>;
        };

        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            quick-tap-ms = <50>;
        };

        remove: remove {
            compatible = "zmk,behavior-mod-morph";
            label = "REMOVE";
            bindings = <&lt 11 BSPC>, <&kp DEL>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        td_dash_en: td_dash_en {
            compatible = "zmk,behavior-hold-tap";
            label = "TD_DASH_EN";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <170>;
            quick-tap-ms = <50>;
            bindings = <&nbsp_emdash_en>, <&kp>;
        };

        td_dash_ru: td_dash_ru {
            compatible = "zmk,behavior-hold-tap";
            label = "TD_DASH_RU";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <170>;
            quick-tap-ms = <50>;
            bindings = <&nbsp_emdash_ru>, <&kp>;
        };

        bspc_del: bspc_del {
            compatible = "zmk,behavior-mod-morph";
            label = "BSPC_DEL";
            bindings = <&kp BSPC>, <&kp DEL>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
    };

    macros {
        toEn: to_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp F13 &to 0>;
            label = "TO_EN";
        };

        toRu: to_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp F14 &to 1>;
            label = "TO_RU";
        };

        en: en {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&kp F13 &macro_param_1to1 &kp MACRO_PLACEHOLDER &kp F14>;
            label = "EN";
            wait-ms = <0>;
            tap-ms = <30>;
        };

        ru: ru {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&kp F14 &macro_param_1to1 &kp MACRO_PLACEHOLDER &kp F13>;
            label = "RU";
            wait-ms = <0>;
            tap-ms = <30>;
        };

        nbsp_emdash_en: nbsp_emdash_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&ru LA(SPACE) &ru LS(LA(MINUS))>;
            label = "NBSP_EMDASH_EN";
        };

        nbsp_emdash_ru: nbsp_emdash_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(SPACE) &kp LS(LA(MINUS))>;
            label = "NBSP_EMDASH_RU";
        };

        par_input: par_input {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LPAR &kp RPAR &kp LEFT>;
            label = "PAR_INPUT";
        };

        mult: mult {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT &kp U &kp N0 &kp N0 &kp D &kp N7>,
                <&macro_release>,
                <&kp LALT>;

            label = "MULT";
        };

        ru_mult: ru_mult {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&toEn &mult &toRu>;
            label = "RU_MULT";
            tap-ms = <50>;
        };

        plusminus: plusminus {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT &kp U &kp N0 &kp N0 &kp B &kp N1>,
                <&macro_release>,
                <&kp LALT>;

            label = "PLUSMINUS";
        };

        ru_plusminus: ru_plusminus {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp F13>,
                <&macro_press>,
                <&kp LALT &kp U &kp N0 &kp N0 &kp B &kp N1>,
                <&macro_release>,
                <&kp LALT &kp F14>;

            label = "RU_PLUSMINUS";
        };

        mathminus: mathminus {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT &kp U &kp N2 &kp N2 &kp N1 &kp N2>,
                <&macro_release>,
                <&kp LALT>;

            label = "MATHMINUS";
        };

        ru_mathminus: ru_mathminus {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp F13>,
                <&macro_press>,
                <&kp LALT &kp U &kp N2 &kp N2 &kp N1 &kp N2>,
                <&macro_release>,
                <&kp LALT &kp F14>;

            label = "RU_MATHMINUS";
        };

        alpha: alpha {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp U &kp N0 &kp N3 &kp B &kp N1>;
            label = "ALPHA";
        };

        beta: beta {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp U &kp N0 &kp N3 &kp B &kp N2>;
            label = "BETA";
        };

        gamma: gamma {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp U &kp N0 &kp N3 &kp B &kp N3>;
            label = "GAMMA";
        };

        delta: delta {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp U &kp N0 &kp N3 &kp B &kp N4>;
            label = "DELTA";
        };

        sigma: sigma {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp U &kp N0 &kp N3 &kp C &kp N3>;
            label = "SIGMA";
        };

        mu: mu {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp U &kp N0 &kp N3 &kp B &kp C>;
            label = "MU";
        };

        lambda: lambda {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp U &kp N0 &kp N3 &kp B &kp B>;
            label = "LAMBDA";
        };

        chi: chi {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp U &kp N0 &kp N3 &kp C &kp N7>;
            label = "CHI";
        };

        sup_0: sup_0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp U &kp N2 &kp N0 &kp N7 &kp N0>;
            label = "SUP_0";
        };

        sup_1: sup_1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp U &kp N0 &kp N0 &kp B &kp N9>;
            label = "SUP_1";
        };

        sup_2: sup_2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp U &kp N0 &kp N0 &kp B &kp N2>;
            label = "SUP_2";
        };

        sup_3: sup_3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp U &kp N0 &kp N0 &kp B &kp N3>;
            label = "SUP_3";
        };

        sup_4: sup_4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp U &kp N2 &kp N0 &kp N7 &kp N4>;
            label = "SUP_4";
        };

        sup_5: sup_5 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp U &kp N2 &kp N0 &kp N7 &kp N5>;
            label = "SUP_5";
        };

        sup_6: sup_6 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp U &kp N2 &kp N0 &kp N7 &kp N6>;
            label = "SUP_6";
        };

        sup_7: sup_7 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp U &kp N2 &kp N0 &kp N7 &kp N7>;
            label = "SUP_7";
        };

        sup_8: sup_8 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp U &kp N2 &kp N0 &kp N7 &kp N8>;
            label = "SUP_8";
        };

        sup_9: sup_9 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp U &kp N2 &kp N0 &kp N7 &kp N9>;
            label = "SUP_9";
        };

        sup_minus: sup_minus {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp U &kp N2 &kp N0 &kp N7 &kp A>;
            label = "SUP_MINUS";
        };

        sup_plus: sup_plus {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp U &kp N2 &kp N0 &kp N7 &kp B>;
            label = "SUP_PLUS";
        };

        sup_lpar: sup_lpar {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp U &kp N2 &kp N0 &kp N7 &kp D>;
            label = "SUP_LPAR";
        };

        sup_rpar: sup_rpar {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp U &kp N2 &kp N0 &kp N7 &kp E>;
            label = "SUP_RPAR";
        };

        sub_50: sub_50 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp U &kp N2 &kp N0 &kp N8 &kp N5 &kp U &kp N2 &kp N0 &kp N8 &kp N0>;
            label = "SUB_50";
        };

        ml: ml {
            compatible = "zmk,behavior-macro-two-param";
            #binding-cells = <2>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &mo MACRO_PLACEHOLDER &macro_param_2to1 &kp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &mo MACRO_PLACEHOLDER &macro_param_2to1 &kp MACRO_PLACEHOLDER>;

            label = "ML";
        };

        odd_spreads: odd_spreads {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LA(LC(LG(X)))) &kp DOWN &kp DOWN &kp DOWN &kp DOWN &kp DOWN &kp RIGHT &kp DOWN &kp DOWN &kp DOWN &kp DOWN &kp DOWN &kp ENTER>;
            label = "zotero_odd_pages";
            wait-ms = <0>;
            tap-ms = <0>;
        };

        no_spreads: no_spreads {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LA(LC(LG(X)))) &kp DOWN &kp DOWN &kp DOWN &kp DOWN &kp DOWN &kp RIGHT &kp DOWN &kp DOWN &kp DOWN &kp DOWN &kp ENTER>;
            label = "NO_SPREADS";
            wait-ms = <0>;
            tap-ms = <0>;
        };

        odd_spreads_ru: odd_spreads_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&en LS(LA(LC(LG(X)))) &kp DOWN &kp DOWN &kp DOWN &kp DOWN &kp DOWN &kp RIGHT &kp DOWN &kp DOWN &kp DOWN &kp DOWN &kp DOWN &kp ENTER>;
            label = "ODD_SPREADS_RU";
            wait-ms = <0>;
            tap-ms = <0>;
        };

        no_spreads_ru: no_spreads_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&en LS(LA(LC(LG(X)))) &kp DOWN &kp DOWN &kp DOWN &kp DOWN &kp DOWN &kp RIGHT &kp DOWN &kp DOWN &kp DOWN &kp DOWN &kp ENTER>;
            label = "NO_SPREADS_RU";
            wait-ms = <0>;
            tap-ms = <0>;
        };

        fit_height: fit_height {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&mkp MB2>,
                <&macro_wait_time 10>,
                <&kp DOWN &kp DOWN &kp DOWN &kp DOWN &kp DOWN &kp DOWN>,
                <&macro_wait_time 10>,
                <&kp ENTER>;

            label = "FIT_HEIGHT";
            wait-ms = <0>;
            tap-ms = <0>;
        };

        fit_width: fit_width {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&mkp MB2>,
                <&macro_wait_time 10>,
                <&kp DOWN &kp DOWN &kp DOWN &kp DOWN &kp DOWN>,
                <&macro_wait_time 10>,
                <&kp ENTER>;

            label = "FIT_WIDTH";
            wait-ms = <0>;
            tap-ms = <0>;
        };

        delete_worddoc: delete_worddoc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp TAB &kp TAB &kp TAB &kp TAB &kp TAB &kp TAB &kp ENTER>;
            label = "DELETE_WORDDOC";
        };

        quo_input: quo_input {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(SEMI) &kp LS(LA(SEMI)) &kp LEFT>;
            label = "QUO_INPUT";
        };

        comma_spc_ru: comma_spc_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RU_COMMA &kp SPACE>;
            label = "COMMA_SPC_RU";
        };

        comma_spc_en: comma_spc_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COMMA &kp SPACE>;
            label = "COMMA_SPC_EN";
        };

        cels_ru: cels_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(SPACE) &kp LS(LA(N8)) &kp RS(C)>;
            label = "CELS_RU";
        };

        cels_en: cels_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&ru LA(SPACE)>,
                <&macro_wait_time 20>,
                <&ru LS(LA(N8))>,
                <&macro_wait_time 20>,
                <&kp RS(C)>;

            label = "CELS_EN";
            tap-ms = <30>;
            wait-ms = <0>;
        };
    };

    combos {
        compatible = "zmk,combos";

        R_CMD {
            bindings = <&kp RCMD>;
            key-positions = <44 30>;
            layers = <0 1>;
        };

        arrow_layer {
            bindings = <&mo 13>;
            key-positions = <56 44>;
        };

        UC_layer {
            bindings = <&ml 4 LALT>;
            key-positions = <53 41>;
            layers = <0>;
        };

        nbsp_ru {
            bindings = <&kp LA(SPACE)>;
            key-positions = <28 40>;
            layers = <1 3 10>;
        };

        nbsp_en {
            bindings = <&ru LA(SPACE)>;
            key-positions = <28 40>;
            layers = <0 2 9>;
        };

        tg_mouse {
            bindings = <&tog 13>;
            key-positions = <30 31>;
        };

        OSM_Shift {
            bindings = <&sk LSHFT>;
            key-positions = <28 31>;
        };

        opt_hyphen {
            bindings = <&kp LA(LC(MINUS))>;
            key-positions = <45 46>;
        };

        nbhyphen {
            bindings = <&kp LC(LG(MINUS))>;
            key-positions = <31 45>;
        };

        nbsp_emdash_ru {
            bindings = <&nbsp_emdash_ru>;
            key-positions = <20 32>;
        };

        nbsp_dash_en {
            bindings = <&nbsp_emdash_en>;
            key-positions = <20 32>;
            layers = <0 2>;
        };

        par_input {
            bindings = <&par_input>;
            key-positions = <27 28>;
            layers = <9 2 3>;
        };

        mb1 {
            bindings = <&mkp MB1>;
            key-positions = <28 29>;
        };

        quo_input {
            bindings = <&quo_input>;
            key-positions = <39 40>;
            layers = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_EN {
            bindings = <
&kp LC(LG(Q))  &kp LG(N5)   &kp LG(N4)    &kp LG(N3)         &kp LG(N2)     &kp LG(N1)                                   &kp LA(N1)  &kp LA(N2)     &kp LA(N3)     &kp LA(N4)    &kp LA(N5)      &kp LA(N6)
&trans         &kp Q        &kp W         &kp E              &kp R          &kp T                                        &kp Y       &kp U          &kp I          &kp O         &kp P           &trans
&kp CAPS       &hrm LCMD A  &hrm LCTRL S  &hrm LALT D        &hrm LSHIFT F  &lt 8 G                                      &kp H       &hrm RSHIFT J  &hrm RALT K    &hrm RCTRL L  &hrm RCMD SEMI  &sk LEFT_SHIFT
&toEn          &mt LG(Z) Z  &mt LG(X) X   &mt LG(C) C        &mt LG(V) V    &kp B        &kp LS(LC(R))    &kp LS(LC(V))  &kp N       &kp M          &none          &none         &none           &toRu
                            &trans        &kp LS(LG(SPACE))  &lt 11 TAB     &lt 9 ENTER  &lt 2 SPACE      &remove        &lt 13 ESC  &mo 6          &kp LS(LG(P))  &trans
            >;

            display-name = "EN";
            sensor-bindings = <&inc_dec_kp RIGHT LEFT>, <&inc_dec_kp UP DOWN>;
        };

        base_RU {
            display-name = "RU";
            bindings = <
&kp LC(LG(Q))  &kp LG(N5)                &kp LG(N4)                   &kp LG(N3)                &kp LG(N2)                &kp LG(N1)                                                         &kp LA(N1)          &kp LA(N2)                                       &kp LA(N3)                             &kp LA(N4)                 &kp LA(N5)                 &kp LA(N6)
&trans         &kp RU_CYRILLIC_SHORT_I   &kp RU_CYRILLIC_TSE          &kp RU_CYRILLIC_U         &kp RU_CYRILLIC_KA        &mt RU_CYRILLIC_IO RU_CYRILLIC_IE                                  &kp RU_CYRILLIC_EN  &kp RU_CYRILLIC_GHE                              &mt RU_CYRILLIC_SHCHA RU_CYRILLIC_SHA  &kp RU_CYRILLIC_ZE         &kp RU_CYRILLIC_HA         &trans
&kp CAPS       &hrm LCMD RU_CYRILLIC_EF  &hrm LCTRL RU_CYRILLIC_YERU  &hrm LALT RU_CYRILLIC_VE  &hrm LSHFT RU_CYRILLIC_A  &lt 8 RU_CYRILLIC_PE                                               &kp RU_CYRILLIC_ER  &hrm RSHFT RU_CYRILLIC_O                         &hrm RALT RU_CYRILLIC_EL               &hrm RCTRL RU_CYRILLIC_DE  &hrm RCMD RU_CYRILLIC_ZHE  &sk LEFT_SHIFT
&toEn          &mt LG(Z) RU_CYRILLIC_YA  &mt LG(X) RU_CYRILLIC_CHE    &mt LG(C) RU_CYRILLIC_ES  &mt LG(V) RU_CYRILLIC_EM  &kp RU_CYRILLIC_I                  &kp LS(LC(R))    &kp LS(LC(V))  &kp RU_CYRILLIC_TE  &mt RU_CYRILLIC_HARD_SIGN RU_CYRILLIC_SOFT_SIGN  &kp RU_CYRILLIC_BE                     &kp RU_CYRILLIC_YU         &kp RU_CYRILLIC_E          &toRu
                                         &trans                       &kp LS(LG(SPACE))         &lt 11 TAB                &lt 10 ENTER                       &lt 3 SPACE      &remove        &lt 13 ESC          &mo 7                                            &kp LS(LG(P))                          &trans
            >;

            sensor-bindings = <&inc_dec_kp RIGHT LEFT>, <&inc_dec_kp UP DOWN>;
        };

        sym_EN {
            bindings = <
&trans          &trans    &trans    &trans        &trans            &trans                              &trans        &trans     &trans               &trans     &trans     &trans
&trans          &trans    &trans    &kp LBRC      &kp RBRC          &kp GRAVE                           &kp CARET     &kp HASH   &kp DLLR             &kp AMPS   &trans     &trans
&kp AT          &kp LBKT  &kp RBKT  &kp LPAR      &kp RPAR          &kp DQT                             &kp QUESTION  &kp EXCL   &td_dash_en 0 MINUS  &kp PLUS   &kp EQUAL  &kp TILDE
&ru LS(LA(N4))  &kp LT    &kp GT    &ru LA(SEMI)  &ru LS(LA(SEMI))  &kp SEMI   &trans    &kp LG(N0)     &kp COLON     &kp FSLH   &kp UNDER            &kp BSLH   &kp PIPE   &ru RU_RUBLE
                          &trans    &trans        &trans            &trans     &trans    &comma_spc_en  &kp DOT       &kp PRCNT  &ru LS(LA(MINUS))    &ru LA(H)
            >;

            display-name = "Sym EN";
            sensor-bindings =
                <&inc_dec_kp LC(TAB) LS(LC(TAB))>,
                <&inc_dec_kp LG(EQUAL) LG(MINUS)>;
        };

        sym_RU {
            bindings = <
&trans          &trans    &trans    &trans        &trans            &trans                                &trans           &trans        &trans                  &trans       &trans        &trans
&trans          &trans    &trans    &en LBRC      &en RBRC          &en GRAVE                             &en CARET        &en HASH      &en DLLR                &en AMPS     &trans        &trans
&en AT          &en LBKT  &en RBKT  &kp LPAR      &kp RPAR          &kp RU_DQT                            &kp RU_QUESTION  &kp RU_EXCL   &td_dash_ru 0 RU_MINUS  &kp RU_PLUS  &kp RU_EQUAL  &en TILDE
&kp LS(LA(N4))  &en LT    &en GT    &kp LA(SEMI)  &kp LS(LA(SEMI))  &kp RU_SEMI  &trans    &kp LG(N0)     &kp RU_COLON     &kp RU_FSLH   &kp UNDER               &kp RU_BSLH  &en PIPE      &kp RU_RUBLE
                          &trans    &trans        &trans            &trans       &trans    &comma_spc_ru  &kp RU_DOT       &kp RU_PRCNT  &kp LS(LA(MINUS))       &kp LA(H)
            >;

            label = "Sym RU";
            sensor-bindings =
                <&inc_dec_kp LC(TAB) LS(LC(TAB))>,
                <&inc_dec_kp LG(EQUAL) LG(MINUS)>;
        };

        uc_EN {
            bindings = <
&trans  &trans   &trans  &trans  &trans  &trans                    &trans      &trans  &trans  &trans  &trans   &trans
&trans  &trans   &trans  &trans  &trans  &trans                    &sup_plus   &sup_7  &sup_8  &sup_9  &trans   &trans
&trans  &delta   &gamma  &beta   &alpha  &trans                    &sup_minus  &sup_4  &sup_5  &sup_6  &sup_0   &sup_rpar
&trans  &lambda  &chi    &mu     &sigma  &trans  &trans    &trans  &trans      &sup_1  &sup_2  &sup_3  &sub_50  &trans
                 &trans  &trans  &trans  &trans  &trans    &trans  &trans      &trans  &trans  &trans
            >;

            label = "Uc EN";
        };

        uc_RU {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;

            label = "Uc RU";
        };

        macro_EN {
            label = "Hot EN";
            bindings = <
&trans  &trans  &trans         &trans         &trans         &trans                                    &trans             &trans          &trans             &trans              &trans             &trans
&trans  &trans  &trans         &trans         &kp LA(LG(R))  &trans                                    &kp LA(LG(N6))     &kp LA(LG(N7))  &kp LA(LG(N8))     &trans              &trans             &trans
&trans  &kp F1  &kp LS(LC(D))  &kp LA(MINUS)  &kp LS(LG(M))  &kp LS(LG(I))                             &kp LA(LC(LG(M)))  &kp LS(F3)      &kp LA(LC(LG(Z)))  &kp LA(LC(LG(N2)))  &kp LA(LC(LG(S)))  &kp LA(LC(LG(G)))
&trans  &trans  &trans         &kp LS(LG(C))  &kp LS(LG(K))  &trans         &trans    &trans           &trans             &kp LA(LC(A))   &fit_width         &fit_height         &kp LS(LG(N8))     &trans
                &trans         &trans         &trans         &mo 12         &trans    &delete_worddoc  &trans             &kp LC(LG(C))   &no_spreads        &odd_spreads
            >;
        };

        macro_RU {
            bindings = <
&trans  &trans  &trans         &trans         &trans         &trans                                    &trans             &trans          &trans             &trans              &trans             &trans
&trans  &trans  &trans         &trans         &kp LA(LG(R))  &trans                                    &kp LA(LG(N6))     &kp LA(LG(N7))  &kp LA(LG(N8))     &trans              &trans             &trans
&trans  &kp F1  &kp LS(LC(D))  &kp LA(MINUS)  &kp LS(LG(M))  &kp LS(LG(I))                             &kp LA(LC(LG(M)))  &kp LS(F3)      &en LA(LC(LG(Z)))  &en LA(LC(LG(N2)))  &en LA(LC(LG(S)))  &en LA(LC(LG(G)))
&trans  &trans  &trans         &kp LS(LG(C))  &kp LS(LG(K))  &trans         &trans    &trans           &trans             &en LA(LC(A))   &fit_width         &fit_height         &en LS(LG(N8))     &trans
                &trans         &trans         &trans         &mo 12         &trans    &delete_worddoc  &trans             &kp LC(LG(C))   &no_spreads_ru     &odd_spreads_ru
            >;

            label = "Hot RU";
        };

        wind_man {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                        &trans             &trans             &trans             &trans             &trans             &trans
&trans  &trans  &trans  &trans  &trans  &trans                        &trans             &kp LS(LA(LG(W)))  &kp LS(LA(LG(E)))  &kp LS(LA(LG(R)))  &trans             &trans
&trans  &trans  &trans  &trans  &trans  &trans                        &kp LS(LA(LG(G)))  &kp LS(LA(LG(S)))  &kp LS(LA(LG(D)))  &kp LS(LA(LG(F)))  &kp LS(LA(LG(A)))  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &kp LG(N0)  &trans             &kp LS(LA(LG(X)))  &kp LS(LA(LG(C)))  &kp LS(LA(LG(V)))  &trans             &trans
                &trans  &trans  &trans  &trans  &trans    &trans      &trans             &trans             &trans             &trans
            >;

            display-name = "WM";
            label = "WM";
            sensor-bindings = <&enc_vol>, <&inc_dec_kp LG(EQUAL) LG(MINUS)>;
        };

        num_EN {
            display-name = "Num EN";
            bindings = <
&trans  &trans                 &trans                 &trans                 &trans                 &kp LA(LG(G))                               &ru LA(EQUAL)    &ru LS(LA(EQUAL))  &cels_en       &trans      &trans         &trans
&trans  &trans                 &trans                 &kp LS(LA(LC(LG(E))))  &kp LS(LA(LC(LG(R))))  &kp LS(LA(LC(LG(T))))                       &kp PLUS         &kp N7             &kp N8         &kp N9      &plusminus     &trans
&trans  &kp LS(LA(LC(LG(A))))  &kp LS(LA(LC(LG(D))))  &kp LS(LA(LC(LG(F))))  &kp LS(LA(LC(LG(B))))  &kp LS(LA(LC(LG(G))))                       &kp MINUS        &kp N4             &kp N5         &kp N6      &kp N0         &mult
&trans  &kp LS(LA(LC(LG(N))))  &kp LS(LA(LC(LG(K))))  &kp LS(LA(LC(LG(P))))  &kp LS(LA(LC(LG(I))))  &kp LS(LA(LC(LG(M))))  &trans    &trans     &kp KP_MULTIPLY  &kp N1             &kp N2         &kp N3      &kp KP_DIVIDE  &kp EQUAL
                               &trans                 &trans                 &trans                 &trans                 &trans    &kp COMMA  &kp DOT          &kp PRCNT          &ru LA(MINUS)  &mathminus
            >;

            sensor-bindings = <&inc_dec_kp LS(LA(LC(LG(S)))) LS(LA(LC(LG(S))))>;
            label = "Num EN";
        };

        num_RU {
            label = "Num RU";
            display-name = "Num RU";
            bindings = <
&trans  &trans                 &trans                 &trans                 &trans                 &kp LA(LG(G))                                  &kp LA(EQUAL)    &kp LS(LA(EQUAL))  &cels_ru       &trans         &trans         &trans
&trans  &trans                 &trans                 &kp LS(LA(LC(LG(E))))  &kp LS(LA(LC(LG(R))))  &kp LS(LA(LC(LG(T))))                          &kp PLUS         &kp N7             &kp N8         &kp N9         &ru_plusminus  &trans
&trans  &kp LS(LA(LC(LG(A))))  &kp LS(LA(LC(LG(D))))  &kp LS(LA(LC(LG(F))))  &kp LS(LA(LC(LG(B))))  &kp LS(LA(LC(LG(G))))                          &kp MINUS        &kp N4             &kp N5         &kp N6         &kp N0         &ru_mult
&trans  &kp LS(LA(LC(LG(N))))  &kp LS(LA(LC(LG(K))))  &kp LS(LA(LC(LG(P))))  &kp LS(LA(LC(LG(I))))  &kp LS(LA(LC(LG(M))))  &trans    &trans        &kp KP_MULTIPLY  &kp N1             &kp N2         &kp N3         &kp KP_DIVIDE  &kp EQUAL
                               &trans                 &trans                 &trans                 &trans                 &trans    &kp RU_COMMA  &kp RU_DOT       &kp RU_PRCNT       &kp LA(MINUS)  &ru_mathminus
            >;

            sensor-bindings = <&inc_dec_kp LS(LA(LC(LG(S)))) LS(LA(LC(LG(S))))>;
        };

        media_nav {
            bindings = <
&trans  &trans    &trans        &trans      &trans          &trans                    &trans        &trans     &trans     &trans     &trans         &trans
&trans  &trans    &trans        &trans      &trans          &trans                    &trans        &kp HOME   &kp UP     &kp END    &trans         &trans
&trans  &kp LCMD  &kp LCTRL     &kp LALT    &kp LEFT_SHIFT  &trans                    &kp LA(LEFT)  &kp LEFT   &kp DOWN   &kp RIGHT  &kp LA(RIGHT)  &trans
&trans  &trans    &kp C_VOL_DN  &kp C_MUTE  &kp C_VOL_UP    &trans  &trans    &trans  &trans        &kp PG_DN  &kp PG_UP  &trans     &trans         &trans
                  &trans        &trans      &trans          &trans  &trans    &trans  &trans        &trans     &trans     &trans
            >;

            display-name = "Media Nav";
            label = "Media Nav";
        };

        emerg {
            display-name = "Emerg";
            bindings = <
&kp F1  &kp F2    &kp F3     &kp F4    &kp F5     &kp F6                    &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans    &trans     &trans    &trans     &trans                    &trans  &kp N7  &kp N8  &kp N9   &trans   &studio_unlock
&trans  &kp LGUI  &kp LCTRL  &kp LALT  &kp LSHFT  &trans                    &trans  &kp N4  &kp N5  &kp N6   &kp N0   &trans
&trans  &trans    &trans     &trans    &trans     &trans  &trans    &trans  &trans  &kp N1  &kp N2  &kp N3   &trans   &kp ENTER
                  &trans     &trans    &trans     &trans  &trans    &trans  &trans  &trans  &kp U   &kp B
            >;

            sensor-bindings = <&inc_dec_kp F24 F23>;
        };

        mouse {
            display-name = "Mouse";
            bindings = <
&trans  &trans  &trans                         &trans         &trans     &trans                               &trans    &trans        &trans          &trans  &trans  &trans
&trans  &trans  &trans                         &trans         &trans     &trans                               &trans    &trans        &trans          &trans  &trans  &trans
&trans  &trans  &kp LG(R)                      &kp LG(N)      &kp LG(O)  &trans                               &mkp MB2  &msc SCRL_UP  &msc SCRL_DOWN  &trans  &trans  &trans
&trans  &trans  &trans                         &trans         &trans     &trans       &trans      &kp LG(N0)  &trans    &kp PG_DN     &kp PG_UP       &trans  &trans  &trans
                &kp LS(LA(LG(RIGHT_BRACKET)))  &kp LA(LG(C))  &trans     &lt 9 ENTER  &mkp MB1    &trans      &trans    &trans        &trans          &trans
            >;

            label = "Mouse";
            sensor-bindings =
                <&inc_dec_kp LC(TAB) LS(LC(TAB))>,
                <&inc_dec_kp LG(EQUAL) LG(MINUS)>;
        };
    };
};
