#include "keys_ru.h"

#define ZMK_POINTING_DEFAULT_SCRL_VAL 20

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "tap-preferred";
    quick-tap-ms = <50>;
};

/ {
    behaviors {
        enc_vol: enc_vol {
            compatible = "zmk,behavior-sensor-rotate";
            label = "ENC_VOL";
            #sensor-binding-cells = <0>;
            bindings = <&kp C_VOL_UP>, <&kp C_VOL_DN>;
        };

        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            require-prior-idle-ms = <30>;
        };

        remove: remove {
            compatible = "zmk,behavior-mod-morph";
            label = "REMOVE";
            bindings = <&lt 9 BSPC>, <&kp DEL>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        td_dash_en: td_dash_en {
            compatible = "zmk,behavior-hold-tap";
            label = "TD_DASH_EN";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <170>;
            quick-tap-ms = <50>;
            bindings = <&nbsp_emdash_en>, <&kp>;
        };

        td_dash_ru: td_dash_ru {
            compatible = "zmk,behavior-hold-tap";
            label = "TD_DASH_RU";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <170>;
            quick-tap-ms = <50>;
            bindings = <&nbsp_emdash_ru>, <&kp>;
        };

        bspc_del: bspc_del {
            compatible = "zmk,behavior-mod-morph";
            label = "BSPC_DEL";
            bindings = <&kp BSPC>, <&kp DEL>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        skCMD_NUM: skCMD_NUM {
            compatible = "zmk,behavior-hold-tap";
            label = "SKCMD_NUM";
            bindings = <&skCMD_Num>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            require-prior-idle-ms = <30>;
        };
    };

    macros {
        toEn: to_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp F13 &to 0>;
            label = "TO_EN";
        };

        toRu: to_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp F14 &to 1>;
            label = "TO_RU";
        };

        en: en {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&kp F13 &macro_param_1to1 &kp MACRO_PLACEHOLDER &kp F14>;
            label = "EN";
            wait-ms = <0>;
            tap-ms = <30>;
        };

        ru: ru {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&kp F14 &macro_param_1to1 &kp MACRO_PLACEHOLDER &kp F13>;
            label = "RU";
            wait-ms = <0>;
            tap-ms = <30>;
        };

        nbsp_emdash_en: nbsp_emdash_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&ru LA(SPACE) &ru LS(LA(MINUS))>;
            label = "NBSP_EMDASH_EN";
        };

        nbsp_emdash_ru: nbsp_emdash_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(SPACE) &kp LS(LA(MINUS))>;
            label = "NBSP_EMDASH_RU";
        };

        par_input: par_input {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LPAR &kp RPAR &kp LEFT>;
            label = "PAR_INPUT";
        };

        mult: mult {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT &kp U &kp N0 &kp N0 &kp D &kp N7>,
                <&macro_release>,
                <&kp LALT>;

            label = "MULT";
        };

        ru_mult: ru_mult {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&toEn &mult &toRu>;
            label = "RU_MULT";
            tap-ms = <50>;
        };

        plusminus: plusminus {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT &kp U &kp N0 &kp N0 &kp B &kp N1>,
                <&macro_release>,
                <&kp LALT>;

            label = "PLUSMINUS";
        };

        ru_plusminus: ru_plusminus {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp F13>,
                <&macro_press>,
                <&kp LALT &kp U &kp N0 &kp N0 &kp B &kp N1>,
                <&macro_release>,
                <&kp LALT &kp F14>;

            label = "RU_PLUSMINUS";
        };

        mathminus: mathminus {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT &kp U &kp N2 &kp N2 &kp N1 &kp N2>,
                <&macro_release>,
                <&kp LALT>;

            label = "MATHMINUS";
        };

        ru_mathminus: ru_mathminus {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp F13>,
                <&macro_press>,
                <&kp LALT &kp U &kp N2 &kp N2 &kp N1 &kp N2>,
                <&macro_release>,
                <&kp LALT &kp F14>;

            label = "RU_MATHMINUS";
        };

        alpha: alpha {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp U &kp N0 &kp N3 &kp B &kp N1>;
            label = "ALPHA";
        };

        beta: beta {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp U &kp N0 &kp N3 &kp B &kp N2>;
            label = "BETA";
        };

        gamma: gamma {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp U &kp N0 &kp N3 &kp B &kp N3>;
            label = "GAMMA";
        };

        delta: delta {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp U &kp N0 &kp N3 &kp B &kp N4>;
            label = "DELTA";
        };

        sigma: sigma {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp U &kp N0 &kp N3 &kp C &kp N3>;
            label = "SIGMA";
        };

        mu: mu {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp U &kp N0 &kp N3 &kp B &kp C>;
            label = "MU";
        };

        lambda: lambda {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp U &kp N0 &kp N3 &kp B &kp B>;
            label = "LAMBDA";
        };

        chi: chi {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp U &kp N0 &kp N3 &kp C &kp N7>;
            label = "CHI";
        };

        sup_0: sup_0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp U &kp N2 &kp N0 &kp N7 &kp N0>;
            label = "SUP_0";
        };

        sup_1: sup_1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp U &kp N0 &kp N0 &kp B &kp N9>;
            label = "SUP_1";
        };

        sup_2: sup_2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp U &kp N0 &kp N0 &kp B &kp N2>;
            label = "SUP_2";
        };

        sup_3: sup_3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp U &kp N0 &kp N0 &kp B &kp N3>;
            label = "SUP_3";
        };

        sup_4: sup_4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp U &kp N2 &kp N0 &kp N7 &kp N4>;
            label = "SUP_4";
        };

        sup_5: sup_5 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp U &kp N2 &kp N0 &kp N7 &kp N5>;
            label = "SUP_5";
        };

        sup_6: sup_6 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp U &kp N2 &kp N0 &kp N7 &kp N6>;
            label = "SUP_6";
        };

        sup_7: sup_7 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp U &kp N2 &kp N0 &kp N7 &kp N7>;
            label = "SUP_7";
        };

        sup_8: sup_8 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp U &kp N2 &kp N0 &kp N7 &kp N8>;
            label = "SUP_8";
        };

        sup_9: sup_9 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp U &kp N2 &kp N0 &kp N7 &kp N9>;
            label = "SUP_9";
        };

        sup_minus: sup_minus {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp U &kp N2 &kp N0 &kp N7 &kp A>;
            label = "SUP_MINUS";
        };

        sup_plus: sup_plus {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp U &kp N2 &kp N0 &kp N7 &kp B>;
            label = "SUP_PLUS";
        };

        sup_lpar: sup_lpar {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp U &kp N2 &kp N0 &kp N7 &kp D>;
            label = "SUP_LPAR";
        };

        sup_rpar: sup_rpar {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp U &kp N2 &kp N0 &kp N7 &kp E>;
            label = "SUP_RPAR";
        };

        sub_50: sub_50 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp U &kp N2 &kp N0 &kp N8 &kp N5 &kp U &kp N2 &kp N0 &kp N8 &kp N0>;
            label = "SUB_50";
        };

        ml: ml {
            compatible = "zmk,behavior-macro-two-param";
            #binding-cells = <2>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &mo MACRO_PLACEHOLDER &macro_param_2to1 &kp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &mo MACRO_PLACEHOLDER &macro_param_2to1 &kp MACRO_PLACEHOLDER>;

            label = "ML";
        };

        odd_spreads: odd_spreads {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LA(LC(LG(X)))) &kp DOWN &kp DOWN &kp DOWN &kp DOWN &kp DOWN &kp RIGHT &kp DOWN &kp DOWN &kp DOWN &kp DOWN &kp DOWN &kp ENTER>;
            label = "zotero_odd_pages";
            wait-ms = <0>;
            tap-ms = <0>;
        };

        no_spreads: no_spreads {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LA(LC(LG(X)))) &kp DOWN &kp DOWN &kp DOWN &kp DOWN &kp DOWN &kp RIGHT &kp DOWN &kp DOWN &kp DOWN &kp DOWN &kp ENTER>;
            label = "NO_SPREADS";
            wait-ms = <0>;
            tap-ms = <0>;
        };

        odd_spreads_ru: odd_spreads_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&en LS(LA(LC(LG(X)))) &kp DOWN &kp DOWN &kp DOWN &kp DOWN &kp DOWN &kp RIGHT &kp DOWN &kp DOWN &kp DOWN &kp DOWN &kp DOWN &kp ENTER>;
            label = "ODD_SPREADS_RU";
            wait-ms = <0>;
            tap-ms = <0>;
        };

        no_spreads_ru: no_spreads_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&en LS(LA(LC(LG(X)))) &kp DOWN &kp DOWN &kp DOWN &kp DOWN &kp DOWN &kp RIGHT &kp DOWN &kp DOWN &kp DOWN &kp DOWN &kp ENTER>;
            label = "NO_SPREADS_RU";
            wait-ms = <0>;
            tap-ms = <0>;
        };

        fit_height: fit_height {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&mkp MB2>,
                <&macro_wait_time 10>,
                <&kp DOWN &kp DOWN &kp DOWN &kp DOWN &kp DOWN &kp DOWN>,
                <&macro_wait_time 10>,
                <&kp ENTER>;

            label = "FIT_HEIGHT";
            wait-ms = <0>;
            tap-ms = <0>;
        };

        fit_width: fit_width {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&mkp MB2>,
                <&macro_wait_time 10>,
                <&kp DOWN &kp DOWN &kp DOWN &kp DOWN &kp DOWN>,
                <&macro_wait_time 10>,
                <&kp ENTER>;

            label = "FIT_WIDTH";
            wait-ms = <0>;
            tap-ms = <0>;
        };

        delete_worddoc: delete_worddoc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp TAB &kp TAB &kp TAB &kp TAB &kp TAB &kp TAB &kp ENTER>;
            label = "DELETE_WORDDOC";
        };

        quo_input: quo_input {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(SEMI) &kp LS(LA(SEMI)) &kp LEFT>;
            label = "QUO_INPUT";
        };

        comma_spc_ru: comma_spc_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RU_COMMA &kp SPACE>;
            label = "COMMA_SPC_RU";
        };

        comma_spc_en: comma_spc_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COMMA &kp SPACE>;
            label = "COMMA_SPC_EN";
        };

        cels_ru: cels_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(SPACE) &kp LS(LA(N8)) &kp RS(C)>;
            label = "CELS_RU";
        };

        cels_en: cels_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&ru LA(SPACE)>,
                <&macro_wait_time 20>,
                <&ru LS(LA(N8))>,
                <&macro_wait_time 20>,
                <&kp RS(C)>;

            label = "CELS_EN";
            tap-ms = <30>;
            wait-ms = <0>;
        };

        skCMD_Num: skCMD_Num {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&mo 4 &sk LEFT_COMMAND>;
            label = "SKCMD_NUM";
        };
    };

    combos {
        compatible = "zmk,combos";

        UC_layer {
            bindings = <&ml 10 LALT>;
            key-positions = <53 56>;
            layers = <0>;
        };

        OSM_Shift {
            bindings = <&sk LSHFT>;
            key-positions = <54 55>;
            layers = <0 1>;
        };

        opt_hyphen {
            bindings = <&kp LA(LC(MINUS))>;
            key-positions = <45 46>;
            layers = <2 3>;
        };

        nbhyphen {
            bindings = <&kp LC(LG(MINUS))>;
            key-positions = <31 45>;
            layers = <2 3>;
        };

        par_input {
            bindings = <&par_input>;
            key-positions = <27 28>;
            layers = <4 2 3 5>;
        };

        quo_input {
            bindings = <&quo_input>;
            key-positions = <39 40>;
            layers = <3>;
        };

        shortcat {
            bindings = <&kp LG(LS(SPACE))>;
            key-positions = <31 32>;
            layers = <0 1>;
        };

        command_palette {
            bindings = <&kp LS(LG(P))>;
            key-positions = <29 28>;
            layers = <0 1>;
        };

        view_frmt_marks_en {
            bindings = <&kp LS(LG(N8))>;
            key-positions = <31 45>;
            layers = <0>;
        };

        view_frmt_marks_ru {
            bindings = <&en LS(LG(N8))>;
            key-positions = <31 45>;
            layers = <1>;
        };

        CMD_1 {
            bindings = <&kp LG(N1)>;
            key-positions = <17 29>;
            layers = <0 1>;
        };

        CMD_2 {
            bindings = <&kp LG(N2)>;
            key-positions = <16 28>;
            layers = <0 1>;
        };

        CMD_3 {
            bindings = <&kp LG(N3)>;
            key-positions = <15 27>;
            layers = <0 1>;
        };

        CMD_4 {
            bindings = <&kp LG(N4)>;
            key-positions = <14 26>;
            layers = <0 1>;
        };

        ALT_1 {
            bindings = <&kp LA(N1)>;
            key-positions = <18 30>;
            layers = <0 1>;
        };

        ALT_2 {
            bindings = <&kp LA(N2)>;
            key-positions = <19 31>;
            layers = <0 1>;
        };

        ALT_3 {
            bindings = <&kp LA(N3)>;
            key-positions = <20 32>;
            layers = <0 1>;
        };

        toRu {
            bindings = <&toRu>;
            key-positions = <45 46>;
            layers = <0 1>;
        };

        toEn {
            bindings = <&toEn>;
            key-positions = <39 40>;
            layers = <0 1>;
        };

        word_review_lang {
            bindings = <&kp LA(LC(LG(L)))>;
            key-positions = <45 46>;
            layers = <6 7>;
        };

        capslock {
            bindings = <&kp CAPS>;
            key-positions = <31 28>;
            layers = <0 1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_EN {
            bindings = <
&trans  &trans       &trans        &trans       &trans         &trans                                  &trans     &trans         &trans       &trans        &trans          &trans
&trans  &kp Q        &kp W         &kp E        &kp R          &kp T                                   &kp Y      &kp U          &kp I        &kp O         &kp P           &trans
&trans  &hrm LCMD A  &hrm LCTRL S  &hrm LALT D  &hrm LSHIFT F  &lt 10 G                                &lt 10 H   &hrm RSHIFT J  &hrm RALT K  &hrm RCTRL L  &hrm RCMD SEMI  &trans
&trans  &mt LG(Z) Z  &mt LG(X) X   &mt LG(C) C  &mt LG(V) V    &kp B        &trans         &trans      &kp N      &kp M          &none        &none         &none           &trans
                     &trans        &trans       &lt 9 TAB      &lt 4 ENTER  &lt 2 SPACE    &lt 8 BSPC  &lt 6 ESC  &lt 9 DEL      &trans       &trans
            >;

            display-name = "EN";
        };

        base_RU {
            display-name = "RU";
            bindings = <
&trans  &trans                    &trans                       &trans                    &trans                    &trans                                                        &trans              &trans                                           &trans                                 &trans                     &trans                     &trans
&trans  &kp RU_CYRILLIC_SHORT_I   &kp RU_CYRILLIC_TSE          &kp RU_CYRILLIC_U         &kp RU_CYRILLIC_KA        &mt RU_CYRILLIC_IO RU_CYRILLIC_IE                             &kp RU_CYRILLIC_EN  &kp RU_CYRILLIC_GHE                              &mt RU_CYRILLIC_SHCHA RU_CYRILLIC_SHA  &kp RU_CYRILLIC_ZE         &kp RU_CYRILLIC_HA         &trans
&trans  &hrm LCMD RU_CYRILLIC_EF  &hrm LCTRL RU_CYRILLIC_YERU  &hrm LALT RU_CYRILLIC_VE  &hrm LSHFT RU_CYRILLIC_A  &kp RU_CYRILLIC_PE                                            &kp RU_CYRILLIC_ER  &hrm RSHFT RU_CYRILLIC_O                         &hrm RALT RU_CYRILLIC_EL               &hrm RCTRL RU_CYRILLIC_DE  &hrm RCMD RU_CYRILLIC_ZHE  &trans
&trans  &mt LG(Z) RU_CYRILLIC_YA  &mt LG(X) RU_CYRILLIC_CHE    &mt LG(C) RU_CYRILLIC_ES  &mt LG(V) RU_CYRILLIC_EM  &kp RU_CYRILLIC_I                  &trans         &trans      &kp RU_CYRILLIC_TE  &mt RU_CYRILLIC_HARD_SIGN RU_CYRILLIC_SOFT_SIGN  &kp RU_CYRILLIC_BE                     &kp RU_CYRILLIC_YU         &kp RU_CYRILLIC_E          &trans
                                  &trans                       &trans                    &lt 9 TAB                 &lt 5 ENTER                        &lt 3 SPACE    &lt 8 BSPC  &lt 7 ESC           &lt 9 DEL                                        &trans                                 &trans
            >;
        };

        sym_EN {
            bindings = <
&trans          &trans    &trans            &trans        &trans            &trans                              &trans        &trans     &trans               &trans        &trans     &trans
&trans          &kp AT    &kp SINGLE_QUOTE  &kp LBRC      &kp RBRC          &kp GRAVE                           &kp CARET     &kp HASH   &kp DLLR             &kp AMPS      &kp TILDE  &trans
&trans          &kp LBKT  &kp RBKT          &kp LPAR      &kp RPAR          &kp DQT                             &kp ASTERISK  &kp EXCL   &td_dash_en 0 MINUS  &kp QUESTION  &kp EQUAL  &trans
&ru LS(LA(N4))  &kp LT    &kp GT            &ru LA(SEMI)  &ru LS(LA(SEMI))  &kp SEMI   &trans    &trans         &kp COLON     &kp FSLH   &kp UNDER            &kp BSLH      &kp PIPE   &trans
                          &trans            &trans        &ru LS(LA(N8))    &ru LA(H)  &trans    &comma_spc_en  &kp DOT       &kp PRCNT  &trans               &trans
            >;

            display-name = "SYM EN";
        };

        sym_RU {
            bindings = <
&trans  &trans    &trans            &trans        &trans            &trans                                &trans           &trans        &trans                  &trans           &trans        &trans
&trans  &en AT    &en SINGLE_QUOTE  &en LBRC      &en RBRC          &en GRAVE                             &en CARET        &en HASH      &en DLLR                &en AMPS         &en TILDE     &trans
&trans  &en LBKT  &en RBKT          &kp LPAR      &kp RPAR          &kp RU_DQT                            &kp RU_ASTERISK  &kp RU_EXCL   &td_dash_ru 0 RU_MINUS  &kp RU_QUESTION  &kp RU_EQUAL  &trans
&trans  &en LT    &en GT            &kp LA(SEMI)  &kp LS(LA(SEMI))  &kp RU_SEMI  &trans    &trans         &kp RU_COLON     &kp RU_FSLH   &kp UNDER               &kp RU_BSLH      &en PIPE      &trans
                  &trans            &trans        &kp LS(LA(N8))    &kp LA(H)    &trans    &comma_spc_ru  &kp RU_DOT       &kp RU_PRCNT  &trans                  &trans
            >;

            label = "SYM RU";
        };

        num_EN {
            display-name = "NUM EN";
            bindings = <
&trans  &trans                 &trans                 &trans                 &trans                 &trans                                      &trans           &trans     &trans  &trans  &trans         &trans
&trans  &trans                 &trans                 &kp LS(LA(LC(LG(E))))  &kp LS(LA(LC(LG(R))))  &kp LS(LA(LC(LG(T))))                       &kp PLUS         &kp N7     &kp N8  &kp N9  &kp LA(LG(G))  &trans
&trans  &kp LS(LA(LC(LG(A))))  &kp LS(LA(LC(LG(D))))  &kp LS(LA(LC(LG(F))))  &kp LS(LA(LC(LG(B))))  &kp LS(LA(LC(LG(G))))                       &kp MINUS        &kp N4     &kp N5  &kp N6  &kp N0         &trans
&trans  &kp LS(LA(LC(LG(N))))  &kp LS(LA(LC(LG(K))))  &kp LS(LA(LC(LG(P))))  &kp LS(LA(LC(LG(I))))  &kp LS(LA(LC(LG(M))))  &trans    &trans     &kp KP_MULTIPLY  &kp N1     &kp N2  &kp N3  &kp KP_DIVIDE  &trans
                               &trans                 &trans                 &kp LS(LA(LC(LG(S))))  &trans                 &trans    &kp COMMA  &kp DOT          &kp PRCNT  &trans  &trans
            >;

            label = "NUM EN";
        };

        num_RU {
            label = "NUM RU";
            display-name = "NUM RU";
            bindings = <
&trans  &trans                 &trans                 &trans                 &trans                 &trans                                         &trans           &trans        &trans  &trans  &trans         &trans
&trans  &trans                 &trans                 &kp LS(LA(LC(LG(E))))  &kp LS(LA(LC(LG(R))))  &kp LS(LA(LC(LG(T))))                          &kp PLUS         &kp N7        &kp N8  &kp N9  &kp LA(LG(G))  &trans
&trans  &kp LS(LA(LC(LG(A))))  &kp LS(LA(LC(LG(D))))  &kp LS(LA(LC(LG(F))))  &kp LS(LA(LC(LG(B))))  &kp LS(LA(LC(LG(G))))                          &kp MINUS        &kp N4        &kp N5  &kp N6  &kp N0         &trans
&trans  &kp LS(LA(LC(LG(N))))  &kp LS(LA(LC(LG(K))))  &kp LS(LA(LC(LG(P))))  &kp LS(LA(LC(LG(I))))  &kp LS(LA(LC(LG(M))))  &trans    &trans        &kp KP_MULTIPLY  &kp N1        &kp N2  &kp N3  &kp KP_DIVIDE  &trans
                               &trans                 &trans                 &kp LS(LA(LC(LG(S))))  &trans                 &trans    &kp RU_COMMA  &kp RU_DOT       &kp RU_PRCNT  &trans  &trans
            >;
        };

        macro_EN {
            label = "HOT EN";
            bindings = <
&trans  &trans  &trans  &trans  &trans             &trans                                              &trans             &trans          &trans             &trans              &trans             &trans
&trans  &trans  &trans  &trans  &trans             &trans                                              &kp LA(LG(N6))     &kp LA(LG(N7))  &kp LA(LG(N8))     &kp LG(O)           &kp LG(P)          &trans
&trans  &trans  &trans  &trans  &kp K_APPLICATION  &trans                                              &kp LA(LC(LG(M)))  &kp LS(F3)      &kp LA(LC(LG(Z)))  &kp LA(LC(LG(N2)))  &kp LA(LC(LG(S)))  &trans
&trans  &trans  &trans  &trans  &trans             &trans            &trans           &trans           &trans             &kp LA(LC(A))   &fit_width         &fit_height         &kp LA(LC(LG(G)))  &trans
                &trans  &trans  &kp F1             &lt 11 LG(ENTER)  &kp LA(MINUS)    &delete_worddoc  &trans             &kp LC(LG(C))   &trans             &trans
            >;
        };

        macro_RU {
            bindings = <
&trans  &trans  &trans  &trans  &trans             &trans                                              &trans             &trans          &trans             &trans              &trans             &trans
&trans  &trans  &trans  &trans  &trans             &trans                                              &kp LA(LG(N6))     &kp LA(LG(N7))  &kp LA(LG(N8))     &kp LG(O)           &kp LG(P)          &trans
&trans  &trans  &trans  &trans  &kp K_APPLICATION  &trans                                              &kp LA(LC(LG(M)))  &kp LS(F3)      &en LA(LC(LG(Z)))  &en LA(LC(LG(N2)))  &en LA(LC(LG(S)))  &trans
&trans  &trans  &trans  &trans  &trans             &trans            &trans           &trans           &trans             &en LA(LC(A))   &fit_width         &fit_height         &en LA(LC(LG(G)))  &trans
                &trans  &trans  &kp F1             &lt 11 LG(ENTER)  &kp LA(MINUS)    &delete_worddoc  &trans             &kp LC(LG(C))   &trans             &trans
            >;

            label = "HOT RU";
        };

        nav {
            bindings = <
&trans  &trans    &trans               &trans            &trans                       &trans                        &trans    &trans        &trans          &trans     &trans  &trans
&trans  &trans    &trans               &trans            &trans                       &trans                        &trans    &msc SCRL_UP  &msc SCRL_DOWN  &trans     &trans  &trans
&trans  &kp RCMD  &hrm LCTRL C_VOL_DN  &hrm LALT C_MUTE  &hrm LEFT_SHIFT C_VOLUME_UP  &trans                        &kp LEFT  &kp DOWN      &kp UP          &kp RIGHT  &trans  &trans
&trans  &trans    &mt LG(X) C_PREV     &mt LG(C) C_PP    &mt LG(V) C_NEXT             &trans    &trans      &trans  &kp HOME  &kp PG_DN     &kp PG_UP       &kp END    &trans  &trans
                  &trans               &trans            &trans                       &mkp MB2  &mkp MB1    &trans  &trans    &trans        &trans          &trans
            >;

            display-name = "NAV";
            label = "NAV";
        };

        wind_man {
            bindings = <
&trans  &trans                &trans                         &trans           &trans         &trans                    &trans         &trans             &trans             &trans             &trans             &trans
&trans  &trans                &trans                         &trans           &trans         &trans                    &kp LG(EQUAL)  &kp LS(LA(LG(W)))  &kp LS(LA(LG(E)))  &kp LS(LA(LG(R)))  &trans             &trans
&trans  &kp LG(LEFT_BRACKET)  &kp LG(RIGHT_BRACKET)          &kp LS(LC(TAB))  &kp LC(TAB)    &trans                    &kp LG(MINUS)  &kp LS(LA(LG(S)))  &kp LS(LA(LG(D)))  &kp LS(LA(LG(F)))  &kp LS(LA(LG(G)))  &trans
&trans  &trans                &kp LS(LA(LG(RIGHT_BRACKET)))  &kp LS(LG(C))    &kp LA(LG(C))  &trans  &trans    &trans  &kp LG(N0)     &kp LS(LA(LG(X)))  &kp LS(LA(LG(C)))  &kp LS(LA(LG(V)))  &trans             &trans
                              &trans                         &trans           &trans         &trans  &trans    &trans  &trans         &trans             &trans             &trans
            >;

            display-name = "WM";
            label = "WM";
        };

        unicode {
            bindings = <
&trans  &trans   &trans  &trans  &trans     &trans                    &trans      &trans  &trans  &trans  &trans   &trans
&trans  &trans   &trans  &trans  &trans     &trans                    &sup_plus   &sup_7  &sup_8  &sup_9  &trans   &trans
&trans  &delta   &gamma  &beta   &sup_rpar  &trans                    &sup_minus  &sup_4  &sup_5  &sup_6  &sup_0   &trans
&trans  &lambda  &chi    &mu     &sigma     &trans  &trans    &trans  &sup_rpar   &sup_1  &sup_2  &sup_3  &sub_50  &trans
                 &trans  &trans  &trans     &trans  &trans    &trans  &trans      &trans  &trans  &trans
            >;

            label = "UCS";
        };

        extra {
            display-name = "EXT";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                        &trans   &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &mathminus                    &kp F24  &kp F7  &kp F8  &kp F9  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &plusminus                    &kp F23  &kp F4  &kp F5  &kp F6  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &mult       &trans    &trans  &trans   &kp F1  &kp F2  &kp F3  &trans  &trans
                &trans  &trans  &trans  &trans      &trans    &trans  &trans   &trans  &trans  &trans
            >;
        };
    };
};
